{"version":3,"sources":["constants/statusTypes.ts","store/constants/index.ts","store/reducers/auth.ts","helpers/formatJson.ts","store/reducers/request.ts","store/reducers/index.ts","helpers/sendsay.js","store/actions/auth.ts","store/sagas/auth.ts","store/actions/request.ts","store/sagas/request.ts","store/sagas/index.ts","store/index.ts","constants/vars.ts","store/selectors/auth.ts","store/selectors/request.ts","hooks/useActions.ts","constants/colors.ts","constants/inputTypes.ts","components/LoginComponents/ErrorBlock/styles.ts","components/LoginComponents/ErrorBlock/index.tsx","helpers/stringifyError.ts","UI/Button/styles.ts","UI/Button/index.tsx","constants/buttonTypes.ts","UI/Input/styles.ts","UI/Input/index.tsx","helpers/checkForCyrillic.ts","components/LoginComponents/LoginForm/styles.ts","components/CommonComponents/Loader/styles.ts","components/CommonComponents/Loader/index.tsx","components/LoginComponents/LoginForm/index.tsx","helpers/isObjEmpty.ts","components/CommonComponents/Logo/styles.ts","components/CommonComponents/Logo/index.tsx","components/CommonComponents/GithubLink/styles.ts","components/CommonComponents/GithubLink/index.tsx","pages/LoginPage/styles.ts","pages/LoginPage/index.tsx","hooks/usePrevious.ts","components/CommonComponents/Icons/DotsIcon.tsx","components/ConsoleComponents/Consoles/Console/styles.ts","components/ConsoleComponents/Consoles/Console/index.tsx","components/ConsoleComponents/Consoles/styles.ts","components/ConsoleComponents/Consoles/index.tsx","helpers/isValidJson.ts","components/CommonComponents/Icons/FormatIcon.tsx","components/ConsoleComponents/Footer/styles.ts","components/ConsoleComponents/Footer/index.tsx","components/CommonComponents/Icons/FullScreenIcon.tsx","components/CommonComponents/Icons/UnsetFullScreenIcon.tsx","components/ConsoleComponents/FullScreen/styles.ts","components/ConsoleComponents/FullScreen/index.tsx","components/ConsoleComponents/Header/styles.ts","components/ConsoleComponents/Header/index.tsx","UI/Dropdown/styles.ts","UI/Dropdown/index.tsx","components/ConsoleComponents/RequestHistory/RequestItem/styles.ts","components/ConsoleComponents/RequestHistory/RequestItem/Copied/styles.ts","components/ConsoleComponents/RequestHistory/RequestItem/Copied/index.tsx","components/ConsoleComponents/RequestHistory/RequestItem/index.tsx","components/ConsoleComponents/RequestHistory/styles.ts","components/ConsoleComponents/RequestHistory/index.tsx","pages/ConsolePage/styles.ts","pages/ConsolePage/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["StatusTypes","ActionTypes","keyMirror","AUTHENTICATE","undefined","AUTHENTICATE_CHECK","AUTHENTICATE_SUCCESS","AUTHENTICATE_FAILURE","LOGOUT","LOGOUT_SUCCESS","CLEAR_REQUEST","REMOVE_REQUEST","REMOVE_ALL_REQUESTS","SET_REQUEST","SET_RESPONSE","SET_RESPONSE_SUCCESS","SET_RESPONSE_FAILED","JSON_INVALID","SET_LOADING","auth","handleActions","state","loading","payload","error","sessionKey","login","sublogin","formatJson","obj","JSON","stringify","parse","initialState","request","id","query","jsonInvalid","response","status","PENDING","allRequests","isLoading","newRequest","filteredRequests","filter","req","newRequestsList","toString","SUCCESS","targetRequest","find","index","reverse","map","_","length","FAILED","sendsay","Sendsay","setSessionFromCookie","SendsayCustom","createActions","authenticate","authenticateSuccess","authenticateCheck","authenticateFailure","logout","logoutSuccess","authenticateCheckSaga","authenticateSaga","logoutSaga","root","api","action","call","password","document","cookie","session","put","explain","all","takeLatest","clearRequest","removeRequest","removeAllRequests","setRequest","setResponse","setResponseSuccess","setResponseFailed","setLoading","setResponseSaga","then","res","fork","VARS","persistAuthConfig","key","storage","persistRequestConfig","sagaMiddleware","createSagaMiddleware","persistedAuthReducer","persistReducer","rootReducer","persistedRequestReducer","reducer","combineReducers","bindMiddleware","middleware","applyMiddleware","configureStore","store","createStore","persistor","persistStore","runSagaTask","sagaTask","run","rootSaga","authLoadingSelector","authErrorInSelector","authIsLoggedInSelector","authLoginInSelector","authSubloginInSelector","requestSelector","requestAllSelector","requestLoadingSelector","useActions","dispatch","useDispatch","bindActionCreators","appActions","COLORS","InputTypes","ErrorWrapper","styled","div","RED_LIGHT","SmileWrapper","Smile","img","DescriptionWrapper","ErrorMessage","p","RED_BRIGHT","ErrorStatus","RED_MEDIUM","ErrorBlock","err","src","alt","FAILED_LOGIN","Button","button","WHITE_BRIGHT","children","onClick","type","disabled","ButtonTypes","InputWrapper","LabelWrapper","Label","label","invalid","css","OptionalSpan","span","GRAY_BRIGHT","Input","input","BLACK","GRAY_LIGHT","GRAY_MEDIUM","value","onChange","setInvalid","placeholder","optional","rules","useState","userTyped","setUserTyped","isValueInvalid","useMemo","required","nonCyrillic","test","withoutSpace","includes","useEffect","OPTIONAL","TEXT","Form","form","FormHeader","Loader","LoginForm","setLogin","setSubLogin","setPassword","invalidLogin","setInvalidLogin","invalidPassoword","setInvalidPassword","doLogin","useCallback","onSubmit","event","preventDefault","buttonDisabled","API_CONSOLE","Object","keys","e","target","LOGIN","SUBLOGIN","PASSWORD","SUBMIT","ENTER","LogoStyled","Logo","LinkWrapper","CodeLogo","WithSpan","Link","a","GithubLink","href","GITHUB_LINK","rel","GITHUB_NAME","Wrapper","WHITE_MEDIUM","withRouter","history","useSelector","isLoggedIn","push","loginProps","usePrevious","currentRef","useRef","previousRef","current","DotsIcon","width","height","viewBox","fill","xmlns","clipPath","cx","cy","r","x","ConsoleWrapper","ConsoleHeader","ConsoleArea","textarea","Console","forwardRef","consoleRef","headerText","readonly","setValue","previousValue","previousQuery","consoleValue","jsonResponse","ref","readOnly","ConsolesWrapper","Delimiter","Consoles","mouseDown","setMouseDown","xPos","setXPos","previousXPos","requestPercentWidth","setRequestPercentWidth","responsePercentWidth","setResponsePercentWidth","requestConsoleRef","responseConsoleRef","requestConsolePxWidth","consoleElem","getBoundingClientRect","responseConsolePxWidth","delimiterMouseDownHandler","delimiterMouseUpHandler","delimiterMouseLeaveHandler","delimiterMouseMoveHandler","pageX","difference","style","prev","REQUEST","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","RESPONSE","isValidJson","o","FormatIcon","opacity","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","FooterWrapper","FormatWrapper","BLUE_BRIGHT","BLUE_LIGHT","FormatText","Footer","sendRequestHandler","formatRequestHandler","formattedJson","BUTTON","SEND","FORMAT","FullScreenIcon","UnsetFullScreenIcon","FullScreenWrapper","FullScreen","fullScreen","setFullScreen","setFullScreenHandler","app","documentElement","requestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","unsetFullScreenHandler","exitFullscreen","mozExitFullscreen","webkitExitFullscreen","unsetFullScreenByEsc","viewHandler","window","addEventListener","removeEventListener","Header","HeaderPart","LeftPart","HeaderText","RightPart","UserData","UserEmail","UserSublogin","UserColon","Logout","LogoutText","LogoutIcon","Action","Separator","Dropdown","setShowCopied","left","executeRequestHandler","copyRequestHandler","navigator","clipboard","writeText","setTimeout","removeRequestHandler","EXECUTE","COPY","DELETE","ItemWrapper","GRAY_SUPER_LIGHT","Indicator","GREEN","ActionName","CopiedWrapper","CopiedLabel","WHITE_LIGHT","CopiedText","Copied","COPIED","RequestItem","showDropdown","setShowDropdown","showCopied","itemRef","dropdownRef","clickOutsideHandler","contains","dropdownStateHandler","EMPTY","HistoryWrapper","ClearHistory","ClearIcon","RequestHistory","requestItemProps","clearHistoryHandler","headerProps","requestHistoryProps","consolesProps","footerProps","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.57db0293.chunk.js","sourcesContent":["export enum StatusTypes {\n  SUCCESS = 'SUCCESS',\n  FAILED = 'FAILED',\n  PENDING = 'PENDING',\n}\n","import keyMirror from 'fbjs/lib/keyMirror';\n\nexport const ActionTypes = keyMirror({\n  AUTHENTICATE: undefined,\n  AUTHENTICATE_CHECK: undefined,\n  AUTHENTICATE_SUCCESS: undefined,\n  AUTHENTICATE_FAILURE: undefined,\n  LOGOUT: undefined,\n  LOGOUT_SUCCESS: undefined,\n  CLEAR_REQUEST: undefined,\n  REMOVE_REQUEST: undefined,\n  REMOVE_ALL_REQUESTS: undefined,\n  SET_REQUEST: undefined,\n  SET_RESPONSE: undefined,\n  SET_RESPONSE_SUCCESS: undefined,\n  SET_RESPONSE_FAILED: undefined,\n  JSON_INVALID: undefined,\n  SET_LOADING: undefined,\n});\n","import { handleActions } from 'redux-actions';\nimport { IError } from '../../models/IError';\n\nimport { ActionTypes } from '../constants';\n\nexport interface IAuthState {\n  loading: boolean;\n  error: IError;\n  sessionKey: string | null;\n  login: string | null;\n  sublogin: string | null;\n}\n\nexport const initialState: IAuthState = {\n  loading: false,\n  error: {} as IError,\n  sessionKey: null,\n  login: null,\n  sublogin: null,\n};\n\nexport default {\n  auth: handleActions(\n    {\n      [ActionTypes.AUTHENTICATE]: (state) => {\n        return {\n          ...state,\n          loading: true,\n        };\n      },\n      [ActionTypes.AUTHENTICATE_SUCCESS]: (state, { payload }) => {\n        return {\n          ...state,\n          loading: false,\n          error: {} as IError,\n          sessionKey: payload.sessionKey,\n          login: payload.login,\n          sublogin: payload.sublogin,\n        };\n      },\n      [ActionTypes.AUTHENTICATE_FAILURE]: (state, { payload }) => {\n        return {\n          ...state,\n          loading: false,\n          error: payload.error,\n          sessionKey: null,\n          login: null,\n          sublogin: null,\n        };\n      },\n      [ActionTypes.LOGOUT]: (state) => {\n        return {\n          ...state,\n          loading: false,\n          sessionKey: null,\n        };\n      },\n      [ActionTypes.LOGOUT_SUCCESS]: (state) => {\n        return {\n          ...state,\n          loading: false,\n          error: {} as IError,\n          sessionKey: null,\n          login: null,\n          sublogin: null,\n        };\n      },\n    },\n    initialState\n  ),\n};\n","export const formatJson = (obj: string | object) => {\n  if (typeof obj === 'object') {\n    return JSON.stringify(obj, null, 3);\n  } else {\n    return JSON.stringify(JSON.parse(obj), null, 3);\n  }\n};\n","import { handleActions } from 'redux-actions';\nimport { StatusTypes } from '../../constants/statusTypes';\nimport { formatJson } from '../../helpers/formatJson';\nimport { IRequest } from '../../models/IRequest';\nimport { ActionTypes } from '../constants';\n\nexport interface IRequestState {\n  request: IRequest;\n  allRequests: IRequest[];\n  isLoading: boolean;\n}\n\nconst initialState: IRequestState = {\n  request: {\n    id: 0,\n    query: '',\n    jsonInvalid: false,\n    response: '',\n    status: StatusTypes.PENDING,\n  },\n  allRequests: [],\n  isLoading: false,\n};\n\nexport default {\n  request: handleActions(\n    {\n      [ActionTypes.CLEAR_REQUEST]: (state) => {\n        const newRequest: IRequest = {\n          id: 0,\n          query: '',\n          jsonInvalid: false,\n          response: '',\n          status: StatusTypes.PENDING,\n        };\n\n        return {\n          ...state,\n          request: newRequest,\n        };\n      },\n      [ActionTypes.SET_LOADING]: (state) => {\n        return {\n          ...state,\n          isLoading: true,\n        };\n      },\n      [ActionTypes.REMOVE_REQUEST]: (state, { payload }) => {\n        const filteredRequests = [...state.allRequests].filter((req) => req.id !== payload.request.id);\n\n        return {\n          ...state,\n          allRequests: filteredRequests,\n        };\n      },\n      [ActionTypes.REMOVE_ALL_REQUESTS]: (state) => {\n        return {\n          ...state,\n          allRequests: [],\n        };\n      },\n      [ActionTypes.JSON_INVALID]: (state) => {\n        const newRequest: IRequest = {\n          ...state.request,\n          jsonInvalid: true,\n        };\n\n        return {\n          ...state,\n          request: newRequest,\n        };\n      },\n      [ActionTypes.SET_REQUEST]: (state, { payload }) => {\n        const newRequest: IRequest = {\n          ...state.request,\n          query: payload.request.query,\n          jsonInvalid: false,\n        };\n\n        return {\n          ...state,\n          request: newRequest,\n        };\n      },\n      [ActionTypes.SET_RESPONSE_SUCCESS]: (state, { payload }) => {\n        const newId =\n          state.allRequests[0] && state.allRequests[0].id?.toString() ? state.allRequests[0].id + 1 : 0;\n\n        const newRequest: IRequest = {\n          id: newId,\n          query: payload.request.query,\n          response: payload.request.response,\n          status: StatusTypes.SUCCESS,\n          jsonInvalid: false,\n        };\n\n        const targetRequest = [...state.allRequests].find(\n          (req) => formatJson(req.query) === formatJson(newRequest.query) && req.status === newRequest.status\n        );\n\n        let newRequestsList;\n\n        if (targetRequest) {\n          newRequestsList = [...state.allRequests].filter((req, index) => {\n            if (index < 20 && req.id !== targetRequest.id) {\n              return req;\n            }\n          });\n          newRequestsList = [newRequest, ...newRequestsList]\n            .reverse()\n            .map((req, index) => {\n              req.id = index;\n              return req;\n            })\n            .reverse();\n        } else {\n          newRequestsList = [newRequest, ...state.allRequests].filter((_, index) => index < 20);\n        }\n\n        return {\n          ...state,\n          request: newRequest,\n          allRequests: newRequestsList,\n          isLoading: false,\n        };\n      },\n      [ActionTypes.SET_RESPONSE_FAILED]: (state, { payload }) => {\n        const newRequest = {\n          id: state.allRequests.length,\n          query: payload.request.query,\n          response: payload.request.response,\n          status: StatusTypes.FAILED,\n          jsonInvalid: false,\n        };\n\n        const targetRequest = [...state.allRequests].find(\n          (req) => formatJson(req.query) === formatJson(newRequest.query) && req.status === newRequest.status\n        );\n\n        let newRequestsList;\n\n        if (targetRequest) {\n          newRequestsList = [...state.allRequests].filter((req, index) => {\n            if (index < 20 && req.id !== targetRequest.id) {\n              return req;\n            }\n          });\n          newRequestsList = [newRequest, ...newRequestsList]\n            .reverse()\n            .map((req, index) => {\n              req.id = index;\n              return req;\n            })\n            .reverse();\n        } else {\n          newRequestsList = [newRequest, ...state.allRequests].filter((_, index) => index < 20);\n        }\n\n        return {\n          ...state,\n          request: newRequest,\n          allRequests: newRequestsList,\n          isLoading: false,\n        };\n      },\n    },\n    initialState\n  ),\n};\n","import login from './auth';\nimport request from './request';\n\nexport default {\n  ...login,\n  ...request,\n};\n","import Sendsay from 'sendsay-api';\nconst sendsay = new Sendsay();\nsendsay.setSessionFromCookie('sendsay_session');\n\nexport default class SendsayCustom {\n  static sendsay = sendsay;\n}\n","import { createActions } from 'redux-actions';\n\nimport { ActionTypes } from '../constants';\n\nexport const {\n  authenticate,\n  authenticateSuccess,\n  authenticateCheck,\n  authenticateFailure,\n  logout,\n  logoutSuccess,\n} = createActions({\n  [ActionTypes.AUTHENTICATE]: (payload) => payload,\n  [ActionTypes.AUTHENTICATE_SUCCESS]: (payload) => payload,\n  [ActionTypes.AUTHENTICATE_CHECK]: (payload) => payload,\n  [ActionTypes.AUTHENTICATE_FAILURE]: (payload) => payload,\n  [ActionTypes.LOGOUT]: (payload) => payload,\n  [ActionTypes.LOGOUT_SUCCESS]: (payload) => payload,\n});\n","import { all, put, call, takeLatest } from 'redux-saga/effects';\nimport api from '../../helpers/sendsay';\n\nimport { ActionTypes } from '../constants';\nimport { authenticateSuccess, authenticateFailure, logoutSuccess } from '../actions/auth';\nimport { IError } from '../../models/IError';\n\nexport function* authenticateCheckSaga() {\n  try {\n    yield api.sendsay.request({\n      action: 'pong',\n    });\n  } catch (error: any) {\n    if (error.id === 'error/auth/failed') {\n      yield call(logoutSaga);\n    }\n  }\n}\n\nexport function* authenticateSaga({ payload }: any) {\n  try {\n    yield api.sendsay\n      .login({\n        login: payload.login,\n        sublogin: payload.sublogin,\n        password: payload.password,\n      });\n\n    document.cookie = `sendsay_session=${api.sendsay.session}`;\n\n    yield put(\n      authenticateSuccess({\n        sessionKey: api.sendsay.session,\n        login: payload.login,\n        sublogin: payload.sublogin,\n      })\n    );\n  } catch (e: IError | any) {\n    document.cookie = '';\n\n    const error: IError = {\n      id: e?.id,\n      explain: e?.explain\n    };\n\n    yield put(authenticateFailure({ error }));\n  }\n}\n\nexport function* logoutSaga() {\n  yield put(logoutSuccess());\n  document.cookie = '';\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(ActionTypes.AUTHENTICATE, authenticateSaga),\n    takeLatest(ActionTypes.AUTHENTICATE_CHECK, authenticateCheckSaga),\n    takeLatest(ActionTypes.LOGOUT, logoutSaga),\n  ]);\n}\n","import { createActions } from 'redux-actions';\n\nimport { ActionTypes } from '../constants';\n\nexport const {\n  clearRequest,\n  removeRequest,\n  removeAllRequests,\n  setRequest,\n  setResponse,\n  setResponseSuccess,\n  setResponseFailed,\n  jsonInvalid,\n  setLoading,\n} = createActions({\n  [ActionTypes.CLEAR_REQUEST]: (payload) => payload,\n  [ActionTypes.REMOVE_REQUEST]: (payload) => payload,\n  [ActionTypes.REMOVE_ALL_REQUESTS]: (payload) => payload,\n  [ActionTypes.SET_REQUEST]: (payload) => payload,\n  [ActionTypes.SET_RESPONSE]: (payload) => payload,\n  [ActionTypes.SET_RESPONSE_SUCCESS]: (payload) => payload,\n  [ActionTypes.SET_RESPONSE_FAILED]: (payload) => payload,\n  [ActionTypes.JSON_INVALID]: (payload) => payload,\n  [ActionTypes.SET_LOADING]: (payload) => payload,\n});\n","import { put, takeLatest, all } from 'redux-saga/effects';\n\nimport api from '../../helpers/sendsay';\nimport { IRequest } from '../../models/IRequest';\nimport { setResponseSuccess, setResponseFailed, setLoading } from '../actions/request';\nimport { ActionTypes } from '../constants';\n\nexport function* setResponseSaga({ payload }: any) {\n  const request: IRequest = {\n    query: payload.query,\n  };\n\n  try {\n    yield put(setLoading());\n    yield api.sendsay.request(JSON.parse(request.query)).then((res: any) => (request.response = res));\n    yield put(setResponseSuccess({ request }));\n  } catch (e: any) {\n    request.response = e;\n    yield put(setResponseFailed({ request }));\n  }\n}\n\nexport default function* root() {\n  yield all([takeLatest(ActionTypes.SET_RESPONSE, setResponseSaga)]);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport login from './auth';\nimport request from './request';\n\nexport default function* root() {\n  yield all([fork(login), fork(request)]);\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst persistAuthConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistRequestConfig = {\n  key: 'request',\n  storage,\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedAuthReducer = persistReducer(persistAuthConfig, rootReducer.auth);\nconst persistedRequestReducer = persistReducer(persistRequestConfig, rootReducer.request);\nconst reducer = combineReducers({ persistedAuthReducer, persistedRequestReducer });\n\nconst bindMiddleware = (middleware: any) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n  return applyMiddleware(...middleware);\n};\n\nconst configureStore = (initialState = {}) => {\n  const store = createStore<any, any, any, any>(reducer, initialState, bindMiddleware([sagaMiddleware]));\n  let persistor = persistStore(store);\n\n  store.runSagaTask = () => {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  };\n\n  store.runSagaTask();\n\n  return {\n    store,\n    persistor,\n  };\n};\n\nexport default configureStore;\n\nexport type RootState = ReturnType<typeof reducer>;\n","enum VARS {\n  API_CONSOLE = 'API-консолька',\n  LOGIN = 'Логин',\n  SUBLOGIN = 'Сублогин',\n  PASSWORD = 'Пароль',\n  ENTER = 'Войти',\n  GITHUB_NAME = '@blackraydev',\n  GITHUB_LINK = 'https://github.com/blackraydev',\n  FAILED_LOGIN = 'Вход не вышел',\n  OPTIONAL = 'Опционально',\n  LOGOUT = 'Выйти',\n  EXECUTE = 'Выполнить',\n  COPY = 'Скопировать',\n  DELETE = 'Удалить',\n  SEND = 'Отправить',\n  FORMAT = 'Форматировать',\n  REQUEST = 'Запрос',\n  RESPONSE = 'Ответ',\n  EMPTY = 'EMPTY',\n  COPIED = 'Скопировано',\n}\n\nexport default VARS;\n","import { RootState } from '..';\n\nexport const authLoadingSelector = (state: RootState) => state.persistedAuthReducer.loading;\nexport const authErrorInSelector = (state: RootState) => state.persistedAuthReducer.error;\nexport const authIsLoggedInSelector = (state: RootState) => !!state.persistedAuthReducer.sessionKey?.length;\nexport const authLoginInSelector = (state: RootState) => state.persistedAuthReducer.login;\nexport const authSubloginInSelector = (state: RootState) => state.persistedAuthReducer.sublogin;\n","import { RootState } from '..';\n\nexport const requestSelector = (state: RootState) => state.persistedRequestReducer.request;\nexport const requestAllSelector = (state: RootState) => state.persistedRequestReducer.allRequests;\nexport const requestLoadingSelector = (state: RootState) => state.persistedRequestReducer.isLoading;\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as appActions from '../store/actions';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(appActions, dispatch);\n};\n","enum COLORS {\n  BLACK = '#0D0D0D',\n  WHITE_BRIGHT = '#FFFFFF',\n  WHITE_MEDIUM = '#F7F7F7',\n  WHITE_LIGHT = '#F6F6F6',\n  GRAY_SUPER_LIGHT = 'rgba(0, 0, 0, 0.1)',\n  GRAY_LIGHT = 'rgba(0, 0, 0, 0.2)',\n  GRAY_MEDIUM = 'rgba(0, 0, 0, 0.4)',\n  GRAY_BRIGHT = 'rgb(153, 153, 153)',\n  PINK = 'rgb(215, 100, 125)',\n  GREEN = '#30B800',\n  BLUE_BRIGHT = '#0055FB',\n  BLUE_LIGHT = '#45A5FF',\n  RED_LIGHT = 'rgba(207, 44, 0, 0.1)',\n  RED_MEDIUM = 'rgba(207, 44, 0, 0.5)',\n  RED_BRIGHT = 'rgba(207, 44, 0, 1)',\n}\n\nexport default COLORS;\n","enum InputTypes {\n  TEXT = 'text',\n  PASSWORD = 'password',\n}\n\nexport default InputTypes;\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n  border-radius: 5px;\n  padding: 15px 10px;\n  height: 70px;\n  background-color: ${COLORS.RED_LIGHT};\n  margin-bottom: 20px;\n`;\n\nexport const SmileWrapper = styled.div``;\n\nexport const Smile = styled.img``;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`;\n\nexport const ErrorMessage = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  color: ${COLORS.RED_BRIGHT};\n  margin-bottom: 5px;\n`;\n\nexport const ErrorStatus = styled.p`\n  font-size: 12px;\n  color: ${COLORS.RED_MEDIUM};\n`;\n","import React from 'react';\nimport VARS from '../../../constants/vars';\n\nimport { stringifyError } from '../../../helpers/stringifyError';\nimport { IError } from '../../../models/IError';\nimport * as UI from './styles';\n\ninterface IErrorBlockProps {\n  error: IError;\n}\n\nconst ErrorBlock: React.FC<IErrorBlockProps> = ({ error }) => {\n  return (\n    <UI.ErrorWrapper>\n      <UI.SmileWrapper>\n        <UI.Smile src=\"/icons/meh.svg\" alt=\"\" />\n      </UI.SmileWrapper>\n      <UI.DescriptionWrapper>\n        <UI.ErrorMessage>{VARS.FAILED_LOGIN}</UI.ErrorMessage>\n        <UI.ErrorStatus>{stringifyError(error)}</UI.ErrorStatus>\n      </UI.DescriptionWrapper>\n    </UI.ErrorWrapper>\n  );\n};\n\nexport default ErrorBlock;\n","import { IError } from '../models/IError';\n\nexport const stringifyError = (err: IError) => {\n  return `{id: \"${err.id}\", explain: \"${err.explain}\"}`;\n};\n","import styled from 'styled-components';\nimport COLORS from '../../constants/colors';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: ${COLORS.WHITE_BRIGHT};\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 5px;\n  padding: 5px 10px;\n  height: 40px;\n  min-width: 110px;\n  background: linear-gradient(180deg, #45a6ff 0%, #0055fb 100%), #c4c4c4;\n\n  &:focus {\n    border: 2px solid #45a5ff;\n  }\n\n  &:hover {\n    background: linear-gradient(0deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15)),\n      linear-gradient(180deg, #45a6ff 0%, #0055fb 100%), #c4c4c4;\n  }\n\n  &:active {\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)),\n      linear-gradient(180deg, #45a6ff 0%, #0055fb 100%), #c4c4c4;\n  }\n\n  &:disabled {\n    cursor: unset;\n    background: linear-gradient(0deg, #c4c4c4, #c4c4c4),\n      linear-gradient(180deg, #45a6ff 0%, #0055fb 100%);\n  }\n`;\n","import React, { MouseEvent, ReactElement } from 'react';\n\nimport { ButtonType } from '../../types/ButtonType';\nimport * as UI from './styles';\n\ninterface IButtonProps {\n  children: string | ReactElement;\n  onClick: (event: MouseEvent) => void;\n  type: ButtonType;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<IButtonProps> = ({ children, onClick, type, disabled }) => {\n  return (\n    <UI.Button onClick={onClick} type={type} disabled={disabled}>\n      {children}\n    </UI.Button>\n  );\n};\n\nexport default Button;\n","enum ButtonTypes {\n  BUTTON = 'button',\n  RESET = 'reset',\n  SUBMIT = 'submit',\n}\n\nexport default ButtonTypes;\n","import styled, { css } from 'styled-components';\nimport COLORS from '../../constants/colors';\n\ninterface IInputStyleProps {\n  invalid?: boolean;\n}\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nexport const Label = styled.label<IInputStyleProps>`\n  font-size: 16px;\n  font-weight: 400;\n\n  ${({ invalid }) =>\n    invalid &&\n    css`\n      color: ${COLORS.RED_BRIGHT};\n    `}\n`;\n\nexport const OptionalSpan = styled.span`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${COLORS.GRAY_BRIGHT};\n`;\n\nexport const Input = styled.input<IInputStyleProps>`\n  transition: 0.15s;\n  height: 40px;\n  font-size: 18px;\n  font-weight: 400;\n  color: ${COLORS.BLACK};\n  border-radius: 5px;\n  border: 1px solid ${COLORS.GRAY_LIGHT};\n  padding-left: 10px;\n\n  &:focus {\n    box-shadow: 0px 0px 5px ${COLORS.GRAY_LIGHT};\n  }\n\n  &:hover {\n    border: 1px solid ${COLORS.GRAY_MEDIUM};\n  }\n\n  ${({ invalid }) =>\n    invalid &&\n    css`\n      border: 1px solid ${COLORS.RED_BRIGHT};\n      box-shadow: 0px 0px 5px ${COLORS.RED_MEDIUM};\n\n      &:focus {\n        box-shadow: 0px 0px 5px ${COLORS.RED_MEDIUM};\n      }\n\n      &:hover {\n        border: 1px solid ${COLORS.RED_BRIGHT};\n      }\n    `}\n`;\n","import React, { Dispatch, SetStateAction, useEffect, useMemo, useState } from 'react';\nimport InputTypes from '../../constants/inputTypes';\nimport VARS from '../../constants/vars';\nimport { checkForCyrillic } from '../../helpers/checkForCyrillic';\nimport IInputRules from '../../models/IInputRules';\n\nimport { ChangeEvent } from '../../types/EventTypes';\nimport { InputType } from '../../types/InputType';\nimport * as UI from './styles';\n\ninterface IInputProps {\n  value: string;\n  onChange: (e: ChangeEvent) => void;\n  invalid?: boolean;\n  setInvalid?: Dispatch<SetStateAction<boolean>>;\n  placeholder?: string;\n  type?: InputType;\n  label?: string;\n  optional?: boolean;\n  rules?: IInputRules;\n}\n\nconst Input: React.FC<IInputProps> = ({\n  value,\n  onChange,\n  invalid,\n  setInvalid,\n  placeholder,\n  type,\n  label,\n  optional,\n  rules,\n}) => {\n  const [userTyped, setUserTyped] = useState<boolean>(false);\n\n  const isValueInvalid = useMemo(() => {\n    return (\n      (rules?.required && !value) ||\n      (rules?.nonCyrillic && checkForCyrillic(value)) ||\n      (rules?.withoutSpace && value.includes(' '))\n    );\n  }, [value]);\n\n  useEffect(() => {\n    if (value) {\n      setUserTyped(true);\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (userTyped && isValueInvalid) {\n      setInvalid && setInvalid(true);\n    } else {\n      setInvalid && setInvalid(false);\n    }\n  }, [isValueInvalid]);\n\n  return (\n    <UI.InputWrapper>\n      <UI.LabelWrapper>\n        {label && <UI.Label invalid={invalid}>{label}</UI.Label>}\n        {optional && <UI.OptionalSpan>{VARS.OPTIONAL}</UI.OptionalSpan>}\n      </UI.LabelWrapper>\n      <UI.Input\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        type={type ? type : InputTypes.TEXT}\n        invalid={invalid}\n      />\n    </UI.InputWrapper>\n  );\n};\n\nexport default Input;\n","export const checkForCyrillic = (str: string): boolean => {\n  const cyrillicPattern = /[а-яА-ЯЁё]/;\n  return cyrillicPattern.test(str);\n};\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\n\nexport const Form = styled.form`\n  width: 520px;\n  min-height: 425px;\n  max-height: 505px;\n  left: calc(50% - 520px / 2);\n  top: 222px;\n  background-color: ${COLORS.WHITE_BRIGHT};\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  padding: 40px 30px;\n  margin-top: 20px;\n`;\n\nexport const FormHeader = styled.p`\n  color: ${COLORS.BLACK};\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Loader = styled.img`\n  animation: loader 1.5s infinite linear;\n\n  @keyframes loader {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\nimport * as UI from './styles';\n\nconst Loader: React.FC = () => {\n  return <UI.Loader src=\"/icons/loader.svg\" alt=\"\" />;\n};\n\nexport default Loader;\n","import React, { FormEvent, MouseEvent, useCallback, useMemo, useState } from 'react';\n\nimport ErrorBlock from '../ErrorBlock';\nimport Button from '../../../UI/Button';\nimport Input from '../../../UI/Input';\nimport ButtonTypes from '../../../constants/buttonTypes';\nimport InputTypes from '../../../constants/inputTypes';\nimport VARS from '../../../constants/vars';\nimport { IUser } from '../../../models/IUser';\nimport { isObjEmpty } from '../../../helpers/isObjEmpty';\nimport { IError } from '../../../models/IError';\nimport * as UI from './styles';\nimport Loader from '../../CommonComponents/Loader';\n\ninterface ILoginFormProps {\n  authenticate: (user: IUser) => void;\n  loading: boolean;\n  error: IError;\n}\n\nconst LoginForm: React.FC<ILoginFormProps> = ({ authenticate, loading, error }) => {\n  const [login, setLogin] = useState<string>('');\n  const [sublogin, setSubLogin] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n\n  const [invalidLogin, setInvalidLogin] = useState<boolean>(false);\n  const [invalidPassoword, setInvalidPassword] = useState<boolean>(false);\n\n  const doLogin = useCallback(() => {\n    const user: IUser = { login, sublogin, password };\n    authenticate(user);\n  }, [login, sublogin, password, authenticate]);\n\n  const onSubmit = useCallback(\n    (event: FormEvent | MouseEvent) => {\n      event.preventDefault();\n      doLogin();\n    },\n    [doLogin]\n  );\n\n  const buttonDisabled = useMemo(() => {\n    return invalidLogin || invalidPassoword || !login || !password;\n  }, [login, password, invalidLogin, invalidPassoword]);\n\n  return (\n    <UI.Form onSubmit={onSubmit} action=\"/\">\n      <UI.FormHeader>{VARS.API_CONSOLE}</UI.FormHeader>\n      {!isObjEmpty(error) && <ErrorBlock error={error} />}\n      <Input\n        value={login}\n        onChange={(e) => setLogin(e.target.value)}\n        invalid={invalidLogin}\n        setInvalid={setInvalidLogin}\n        placeholder={VARS.LOGIN}\n        label={VARS.LOGIN}\n        rules={{ required: true, withoutSpace: true }}\n      />\n      <Input\n        value={sublogin}\n        onChange={(e) => setSubLogin(e.target.value)}\n        placeholder={VARS.SUBLOGIN}\n        label={VARS.SUBLOGIN}\n        optional\n      />\n      <Input\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        invalid={invalidPassoword}\n        setInvalid={setInvalidPassword}\n        placeholder={VARS.PASSWORD}\n        label={VARS.PASSWORD}\n        rules={{ required: true, nonCyrillic: true }}\n        type={InputTypes.PASSWORD}\n      />\n      <Button onClick={onSubmit} type={ButtonTypes.SUBMIT} disabled={buttonDisabled}>\n        {loading ? <Loader /> : VARS.ENTER}\n      </Button>\n    </UI.Form>\n  );\n};\n\nexport default LoginForm;\n","export const isObjEmpty = (obj: {}) => {\n  return Object.keys(obj).length === 0;\n};\n","import styled from 'styled-components';\n\nexport const LogoStyled = styled.img``;\n","import React from 'react';\nimport * as UI from './styles';\n\nconst Logo = () => {\n  return <UI.LogoStyled src=\"/icons/logo.svg\" alt=\"\" />;\n};\n\nexport default Logo;\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const CodeLogo = styled.img`\n  transition: 0.15s;\n  width: 20px;\n  height: 20px;\n  fill: ${COLORS.BLACK};\n  margin-right: 5px;\n`;\n\nexport const WithSpan = styled.span`\n  margin-right: 5px;\n`;\n\nexport const Link = styled.a`\n  transition: 0.15s;\n  color: ${COLORS.GRAY_BRIGHT};\n  font-size: 16px;\n  text-decoration: none;\n\n  &:hover {\n    color: ${COLORS.BLACK};\n  }\n`;\n","import React from 'react';\n\nimport VARS from '../../../constants/vars';\nimport * as UI from './styles';\n\nconst GithubLink = () => {\n  return (\n    <UI.LinkWrapper>\n      <UI.CodeLogo src=\"/icons/code.svg\" />\n      <UI.WithSpan>with ❤️ by </UI.WithSpan>\n      <UI.Link href={VARS.GITHUB_LINK} target=\"_blank\" rel=\"noreferrer\">\n        {VARS.GITHUB_NAME}\n      </UI.Link>\n    </UI.LinkWrapper>\n  );\n};\n\nexport default GithubLink;\n","import styled from 'styled-components';\nimport COLORS from '../../constants/colors';\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: ${COLORS.WHITE_MEDIUM};\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nimport { authErrorInSelector, authIsLoggedInSelector, authLoadingSelector } from '../../store/selectors';\nimport { useActions } from '../../hooks/useActions';\nimport LoginForm from '../../components/LoginComponents/LoginForm';\nimport Logo from '../../components/CommonComponents/Logo';\nimport GithubLink from '../../components/CommonComponents/GithubLink';\nimport * as UI from './styles';\n\nconst LoginPage: React.FC<RouteComponentProps> = ({ history }) => {\n  const { authenticate, authenticateCheck } = useActions();\n\n  const loading = useSelector(authLoadingSelector);\n  const error = useSelector(authErrorInSelector);\n  const isLoggedIn = useSelector(authIsLoggedInSelector);\n\n  useEffect(() => {\n    authenticateCheck();\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push('/console');\n    }\n  }, [isLoggedIn]);\n\n  const loginProps = {\n    authenticate,\n    loading,\n    error,\n  };\n\n  return (\n    <UI.Wrapper>\n      <Logo />\n      <LoginForm {...loginProps} />\n      <GithubLink />\n    </UI.Wrapper>\n  );\n};\n\nexport default withRouter(LoginPage);\n","import { useRef } from 'react';\n\nexport function usePrevious<T>(value: T): T {\n  const currentRef = useRef<T>(value);\n  const previousRef = useRef<T | any>(null);\n\n  if (currentRef.current !== value) {\n    previousRef.current = currentRef.current;\n    currentRef.current = value;\n  }\n\n  return previousRef.current;\n}\n","import React from 'react';\n\nexport const DotsIcon = () => (\n  <svg width=\"6\" height=\"18\" viewBox=\"0 0 6 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <circle cx=\"3\" cy=\"2\" r=\"2\" fill=\"black\" />\n      <circle cx=\"3\" cy=\"9\" r=\"2\" fill=\"black\" />\n      <circle cx=\"3\" cy=\"16\" r=\"2\" fill=\"black\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect x=\"0\" width=\"6\" height=\"18\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import styled from 'styled-components';\nimport COLORS from '../../../../constants/colors';\n\ninterface IConsoleStylesProps {\n  invalid?: boolean;\n}\n\nexport const ConsoleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  jusfify-content: flex-start;\n  align-items: flex-start;\n  padding: 10px 15px 15px 15px;\n  height: 100%;\n  width: 100%;\n\n  &:first-of-type {\n    padding-right: 0px;\n  }\n\n  &:last-of-type {\n    padding-left: 0px;\n  }\n`;\n\nexport const ConsoleHeader = styled.label`\n  font-size: 12px;\n  color: ${COLORS.GRAY_BRIGHT};\n  margin-bottom: 3px;\n`;\n\nexport const ConsoleArea = styled.textarea<IConsoleStylesProps>`\n  display: flex;\n  flex-basis: calc(100% - 90px);\n  border-radius: 5px;\n  border: 1px solid ${({ invalid }) => (invalid ? COLORS.RED_BRIGHT : COLORS.GRAY_LIGHT)};\n  min-width: 400px;\n  min-height: 400px;\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  font-family: Monaco;\n  font-size: 14px;\n  resize: none;\n`;\n","import React, { forwardRef, useEffect, useMemo, useState } from 'react';\nimport { StatusTypes } from '../../../../constants/statusTypes';\nimport { usePrevious } from '../../../../hooks/usePrevious';\nimport { IRequest } from '../../../../models/IRequest';\nimport * as UI from './styles';\n\ninterface IConsoleProps {\n  headerText: string;\n  request: IRequest;\n  setRequest?: (payload: any) => void;\n  readonly?: boolean;\n}\n\nconst Console = forwardRef(({ headerText, request, setRequest, readonly }: IConsoleProps, consoleRef: any) => {\n  const [value, setValue] = useState<string>('');\n\n  const previousValue = usePrevious<string>(value);\n  const previousQuery = usePrevious<string>(request.query);\n\n  const { response, status, jsonInvalid } = request;\n\n  useEffect(() => {\n    if (setRequest) {\n      const request: IRequest = {\n        query: value,\n      };\n\n      setRequest({ request });\n    }\n  }, [value]);\n\n  const consoleValue = useMemo(() => {\n    if (readonly) {\n      const jsonResponse = JSON.stringify(response, null, 3);\n      return jsonResponse !== '\"\"' ? jsonResponse : '';\n    }\n\n    if (previousValue == previousQuery || previousValue == request.query) {\n      return value;\n    }\n\n    return request.query;\n  }, [request, value, response, previousValue, previousQuery]);\n\n  return (\n    <UI.ConsoleWrapper ref={consoleRef}>\n      <UI.ConsoleHeader>{headerText}:</UI.ConsoleHeader>\n      <UI.ConsoleArea\n        value={consoleValue}\n        readOnly={readonly}\n        onChange={(e) => setValue(e.target.value)}\n        invalid={(!readonly && jsonInvalid) || (readonly && status === StatusTypes.FAILED)}\n      />\n    </UI.ConsoleWrapper>\n  );\n});\n\nexport default Console;\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\n\nexport const ConsolesWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  width: 100%:\n  height: 100%;\n  overflow: scroll;\n  background-color: ${COLORS.WHITE_BRIGHT};\n`;\n\nexport const Delimiter = styled.div`\n  margin-top: -50px;\n  cursor: pointer;\n  padding: 0 5px;\n\n  &:drag {\n    cursor: col-resize;\n  }\n\n  svg {\n    circle {\n      transition: 0.15s;\n      fill: ${COLORS.GRAY_LIGHT};\n    }\n\n    &:hover circle {\n      fill: ${COLORS.GRAY_MEDIUM};\n    }\n  }\n`;\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport VARS from '../../../constants/vars';\nimport { usePrevious } from '../../../hooks/usePrevious';\nimport { IRequest } from '../../../models/IRequest';\nimport { DotsIcon } from '../../CommonComponents/Icons/DotsIcon';\nimport Console from './Console';\nimport * as UI from './styles';\n\ninterface IConsolesProps {\n  request: IRequest;\n  setRequest: (payload: any) => void;\n}\n\nconst Consoles: React.FC<IConsolesProps> = ({ request, setRequest }) => {\n  const [initialState, setInitialState] = useState<boolean>(false);\n  const [mouseDown, setMouseDown] = useState<boolean>(false);\n  const [xPos, setXPos] = useState<number>(0);\n  const previousXPos = usePrevious<number>(xPos);\n\n  const [requestPercentWidth, setRequestPercentWidth] = useState<number>(100);\n  const [responsePercentWidth, setResponsePercentWidth] = useState<number>(100);\n\n  const requestConsoleRef = useRef<any>(null);\n  const responseConsoleRef = useRef<any>(null);\n\n  const requestConsolePxWidth = useMemo(() => {\n    const consoleElem = requestConsoleRef.current;\n\n    if (consoleElem && consoleElem.getBoundingClientRect) {\n      const { width } = consoleElem.getBoundingClientRect();\n      return width;\n    }\n  }, [requestConsoleRef.current]);\n\n  const responseConsolePxWidth = useMemo(() => {\n    const consoleElem = responseConsoleRef.current;\n\n    if (consoleElem && consoleElem.getBoundingClientRect) {\n      const { width } = consoleElem.getBoundingClientRect();\n      return width;\n    }\n  }, [responseConsoleRef.current]);\n\n  const delimiterMouseDownHandler = useCallback(() => {\n    setMouseDown(true);\n  }, []);\n\n  const delimiterMouseUpHandler = useCallback(() => {\n    setMouseDown(false);\n  }, []);\n\n  const delimiterMouseLeaveHandler = useCallback(() => {\n    setMouseDown(false);\n  }, []);\n\n  const delimiterMouseMoveHandler = useCallback(\n    (e: any) => {\n      setXPos(e.pageX);\n\n      if (mouseDown && previousXPos > 0 && xPos > 0) {\n        const difference = previousXPos - xPos;\n        const delta = 0.07;\n\n        if (difference > 0 && requestConsolePxWidth > 400) {\n          requestConsoleRef.current.style.width = `${requestPercentWidth - delta}%`;\n          responseConsoleRef.current.style.width = `${responsePercentWidth + delta}%`;\n\n          setRequestPercentWidth((prev) => prev - delta);\n          setResponsePercentWidth((prev) => prev + delta);\n        } else if (difference < 0 && responseConsolePxWidth > 400) {\n          responseConsoleRef.current.style.width = `${responsePercentWidth - delta}%`;\n          requestConsoleRef.current.style.width = `${requestPercentWidth + delta}%`;\n\n          setRequestPercentWidth((prev) => prev + delta);\n          setResponsePercentWidth((prev) => prev - delta);\n        }\n      }\n    },\n    [\n      mouseDown,\n      previousXPos,\n      xPos,\n      requestConsolePxWidth,\n      responseConsolePxWidth,\n      requestConsoleRef.current,\n      responseConsoleRef.current,\n      requestPercentWidth,\n      responsePercentWidth,\n    ]\n  );\n\n  return (\n    <UI.ConsolesWrapper>\n      <Console ref={requestConsoleRef} headerText={VARS.REQUEST} request={request} setRequest={setRequest} />\n      <UI.Delimiter\n        onMouseDown={delimiterMouseDownHandler}\n        onMouseUp={delimiterMouseUpHandler}\n        onMouseMove={delimiterMouseMoveHandler}\n        onMouseLeave={delimiterMouseLeaveHandler}\n      >\n        <DotsIcon />\n      </UI.Delimiter>\n      <Console ref={responseConsoleRef} headerText={VARS.RESPONSE} request={request} readonly />\n    </UI.ConsolesWrapper>\n  );\n};\n\nexport default Consoles;\n","export const isValidJson = (req: string) => {\n  try {\n    var o = JSON.parse(req);\n    if (o && typeof o === 'object') {\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n};\n","import React from 'react';\n\nexport const FormatIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g opacity=\"0.8\">\n      <path d=\"M21 10H7\" stroke=\"#0D0D0D\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <path d=\"M11 6H3\" stroke=\"#0D0D0D\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <path d=\"M12 14H7\" stroke=\"#0D0D0D\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <path d=\"M7 18H3\" stroke=\"#0D0D0D\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </g>\n  </svg>\n);\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\nimport GithubLink from '../../CommonComponents/GithubLink';\n\nexport const FooterWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 70px;\n  width: 100%;\n  padding: 15px;\n  background-color: ${COLORS.WHITE_BRIGHT};\n  border-top: 1px solid ${COLORS.GRAY_LIGHT};\n\n  div:first-of-type {\n    margin: 0;\n    margin-left: 55px;\n  }\n`;\n\nexport const FormatWrapper = styled.div`\n  transition: 0.15s;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding: 6px 4px;\n  border-radius: 7px;\n  border: 2px solid ${COLORS.WHITE_BRIGHT};\n\n  svg g path {\n    transition: 0.15s;\n  }\n\n  &:hover {\n    p {\n      color: ${COLORS.BLUE_BRIGHT};\n    }\n\n    svg g path {\n      stroke: ${COLORS.BLUE_BRIGHT};\n    }\n  }\n\n  &:focus {\n    border: 2px solid ${COLORS.BLUE_LIGHT};\n  }\n`;\n\nexport const FormatText = styled.p`\n  transition: 0.15s;\n  color: ${COLORS.BLACK};\n  font-size: 16px;\n  margin-left: 8px;\n`;\n","import React, { useCallback } from 'react';\nimport { Action, ActionFunctionAny } from 'redux-actions';\n\nimport ButtonTypes from '../../../constants/buttonTypes';\nimport VARS from '../../../constants/vars';\nimport { formatJson } from '../../../helpers/formatJson';\nimport { isValidJson } from '../../../helpers/isValidJson';\nimport { IRequest } from '../../../models/IRequest';\nimport Button from '../../../UI/Button';\nimport GithubLink from '../../CommonComponents/GithubLink';\nimport { FormatIcon } from '../../CommonComponents/Icons/FormatIcon';\nimport Loader from '../../CommonComponents/Loader';\nimport * as UI from './styles';\n\ninterface IFooterProps {\n  isLoading: boolean;\n  request: IRequest;\n  setRequest: ActionFunctionAny<Action<any>>;\n  setResponse: ActionFunctionAny<Action<any>>;\n  jsonInvalid: ActionFunctionAny<Action<any>>;\n}\n\nconst Footer: React.FC<IFooterProps> = ({ isLoading, request, setRequest, setResponse, jsonInvalid }) => {\n  const sendRequestHandler = useCallback(() => {\n    if (isValidJson(request.query)) {\n      return setResponse(request);\n    }\n\n    return jsonInvalid();\n  }, [setResponse, request]);\n\n  const formatRequestHandler = useCallback(() => {\n    if (isValidJson(request.query)) {\n      const formattedJson = formatJson(request.query);\n      const formattedRequest: IRequest = {\n        query: formattedJson,\n      };\n\n      return setRequest({ request: formattedRequest });\n    }\n\n    return jsonInvalid();\n  }, [setRequest]);\n\n  return (\n    <UI.FooterWrapper>\n      <Button onClick={sendRequestHandler} type={ButtonTypes.BUTTON}>\n        {isLoading ? <Loader /> : VARS.SEND}\n      </Button>\n      <GithubLink />\n      <UI.FormatWrapper onClick={formatRequestHandler}>\n        <FormatIcon />\n        <UI.FormatText>{VARS.FORMAT}</UI.FormatText>\n      </UI.FormatWrapper>\n    </UI.FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nexport const FullScreenIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M6 1H3C2.46957 1 1.96086 1.21071 1.58579 1.58579C1.21071 1.96086 1 2.46957 1 3V6M19 6V3C19 2.46957 18.7893 1.96086 18.4142 1.58579C18.0391 1.21071 17.5304 1 17 1H14M14 19H17C17.5304 19 18.0391 18.7893 18.4142 18.4142C18.7893 18.0391 19 17.5304 19 17V14M1 14V17C1 17.5304 1.21071 18.0391 1.58579 18.4142C1.96086 18.7893 2.46957 19 3 19H6\"\n      stroke=\"#0D0D0D\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const UnsetFullScreenIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M1 6H4C4.53043 6 5.03914 5.78929 5.41421 5.41421C5.78929 5.03914 6 4.53043 6 4V1M14 1V4C14 4.53043 14.2107 5.03914 14.5858 5.41421C14.9609 5.78929 15.4696 6 16 6H19M19 14H16C15.4696 14 14.9609 14.2107 14.5858 14.5858C14.2107 14.9609 14 15.4696 14 16V19M6 19V16C6 15.4696 5.78929 14.9609 5.41421 14.5858C5.03914 14.2107 4.53043 14 4 14H1\"\n      stroke=\"#0D0D0D\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\n\nexport const FullScreenWrapper = styled.div`\n  transition: 0.15s;\n  padding: 4px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid ${COLORS.WHITE_MEDIUM};\n\n  svg path {\n    transition: 0.15s;\n  }\n\n  &:hover {\n    svg path {\n      stroke: ${COLORS.BLUE_BRIGHT};\n    }\n  }\n\n  &:focus {\n    border-radius: 7px;\n    border: 2px solid ${COLORS.BLUE_LIGHT};\n  }\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { FullScreenIcon } from '../../CommonComponents/Icons/FullScreenIcon';\nimport { UnsetFullScreenIcon } from '../../CommonComponents/Icons/UnsetFullScreenIcon';\n\nimport * as UI from './styles';\n\nconst FullScreen: React.FC = () => {\n  const [fullScreen, setFullScreen] = useState<boolean>(false);\n\n  const setFullScreenHandler = useCallback(() => {\n    const app: any = document.documentElement;\n\n    if (app.requestFullscreen) {\n      app.requestFullscreen();\n    } else if (app.mozRequestFullscreen) {\n      app.mozRequestFullscreen();\n    } else if (app.webkitRequestFullscreen) {\n      app.webkitRequestFullscreen();\n    }\n\n    setFullScreen(true);\n  }, [setFullScreen]);\n\n  const unsetFullScreenHandler = useCallback(() => {\n    const app: any = document;\n\n    if (app.exitFullscreen) {\n      app.exitFullscreen();\n    } else if (app.mozExitFullscreen) {\n      app.mozExitFullscreen();\n    } else if (app.webkitExitFullscreen) {\n      app.webkitExitFullscreen();\n    }\n\n    setFullScreen(false);\n  }, [setFullScreen]);\n\n  const unsetFullScreenByEsc = useCallback(\n    (e) => {\n      if (fullScreen && e.key === 'Escape') {\n        unsetFullScreenHandler();\n      }\n    },\n    [unsetFullScreenHandler]\n  );\n\n  const viewHandler = useCallback(() => {\n    if (fullScreen) return unsetFullScreenHandler();\n    return setFullScreenHandler();\n  }, [fullScreen, unsetFullScreenHandler, setFullScreenHandler]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', unsetFullScreenByEsc);\n    return () => {\n      window.removeEventListener('keydown', unsetFullScreenByEsc);\n    };\n  }, [unsetFullScreenByEsc]);\n\n  return (\n    <UI.FullScreenWrapper onClick={viewHandler}>\n      {fullScreen ? <UnsetFullScreenIcon /> : <FullScreenIcon />}\n    </UI.FullScreenWrapper>\n  );\n};\n\nexport default FullScreen;\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n`;\n\nexport const HeaderPart = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const LeftPart = styled(HeaderPart)``;\n\nexport const HeaderText = styled.p`\n  font-size: 20px;\n  color: ${COLORS.BLACK};\n  margin-left: 20px;\n`;\n\nexport const RightPart = styled(HeaderPart)`\n  margin-right: -7px;\n`;\n\nexport const UserData = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px 15px;\n  font-size: 16px;\n  color: ${COLORS.BLACK};\n  border: 1px solid ${COLORS.GRAY_LIGHT};\n  border-radius: 5px;\n`;\n\nexport const UserEmail = styled.span``;\nexport const UserSublogin = styled.span``;\n\nexport const UserColon = styled.span`\n  margin: 0 5px;\n  color: ${COLORS.GRAY_LIGHT};\n`;\n\nexport const Logout = styled.div`\n  cursor: pointer;\n  margin-left: 30px;\n  margin-right: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LogoutText = styled.p`\n  color: ${COLORS.BLACK};\n  font-size: 16px;\n`;\n\nexport const LogoutIcon = styled.img`\n  margin-left: 8px;\n`;\n","import React, { useState } from 'react';\n\nimport VARS from '../../../constants/vars';\nimport Logo from '../../CommonComponents/Logo';\nimport FullScreen from '../FullScreen';\nimport * as UI from './styles';\n\ninterface IHeaderProps {\n  login: string | null;\n  sublogin: string | null;\n  logout: () => void;\n}\n\nconst Header: React.FC<IHeaderProps> = ({ login, sublogin, logout }) => {\n  return (\n    <UI.Header>\n      <UI.LeftPart>\n        <Logo />\n        <UI.HeaderText>{VARS.API_CONSOLE}</UI.HeaderText>\n      </UI.LeftPart>\n      <UI.RightPart>\n        <UI.UserData>\n          <UI.UserEmail>{login}</UI.UserEmail>\n          {sublogin && (\n            <>\n              <UI.UserColon>:</UI.UserColon>\n              <UI.UserSublogin>{sublogin}</UI.UserSublogin>\n            </>\n          )}\n        </UI.UserData>\n        <UI.Logout onClick={logout}>\n          <UI.LogoutText>{VARS.LOGOUT}</UI.LogoutText>\n          <UI.LogoutIcon src=\"/icons/log-out.svg\" />\n        </UI.Logout>\n        <FullScreen />\n      </UI.RightPart>\n    </UI.Header>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport COLORS from '../../constants/colors';\n\nexport const Wrapper = styled.div`\n  bottom: -142px;\n  right: 0;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 133px;\n  height: 141px;\n  border-radius: 3px;\n  background: ${COLORS.WHITE_BRIGHT};\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Action = styled.div`\n  transition: 0.15s;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  padding: 10px 15px;\n  background-color: ${COLORS.WHITE_BRIGHT};\n  color: ${COLORS.BLACK};\n\n  &:hover {\n    background-color: ${COLORS.BLUE_BRIGHT};\n    color: ${COLORS.WHITE_BRIGHT};\n\n    &:last-of-type {\n      background-color: ${COLORS.RED_BRIGHT};\n    }\n  }\n\n  &:first-of-type {\n    margin-top: 5px;\n  }\n\n  &:last-of-type {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${COLORS.GRAY_LIGHT};\n  margin: 5px 0;\n`;\n","import React, { Dispatch, forwardRef, SetStateAction, useCallback, useEffect } from 'react';\n\nimport { Action, ActionFunctionAny } from 'redux-actions';\nimport VARS from '../../constants/vars';\nimport { IRequest } from '../../models/IRequest';\nimport * as UI from './styles';\n\ninterface IDropdownProps {\n  request: IRequest;\n  setRequest: ActionFunctionAny<Action<any>>;\n  setResponse: ActionFunctionAny<Action<any>>;\n  removeRequest: ActionFunctionAny<Action<any>>;\n  setShowCopied: Dispatch<SetStateAction<boolean>>;\n}\n\nconst Dropdown = forwardRef(\n  ({ request, setRequest, setResponse, removeRequest, setShowCopied }: IDropdownProps, ref: any) => {\n    useEffect(() => {\n      const { x } = ref.current.getBoundingClientRect();\n\n      if (x < 0) {\n        ref.current.style.left = 0;\n      }\n    }, [ref]);\n\n    const executeRequestHandler = useCallback(() => {\n      setRequest({ request });\n      setResponse(request);\n    }, []);\n\n    const copyRequestHandler = useCallback(() => {\n      const { query } = request;\n      navigator.clipboard.writeText(query);\n\n      setShowCopied(true);\n\n      setTimeout(() => setShowCopied(false), 1250);\n    }, [request, setShowCopied]);\n\n    const removeRequestHandler = useCallback(() => {\n      removeRequest({ request });\n    }, [removeRequest]);\n\n    return (\n      <UI.Wrapper ref={ref}>\n        <UI.Action onClick={executeRequestHandler}>{VARS.EXECUTE}</UI.Action>\n        <UI.Action onClick={copyRequestHandler}>{VARS.COPY}</UI.Action>\n        <UI.Separator />\n        <UI.Action onClick={removeRequestHandler}>{VARS.DELETE}</UI.Action>\n      </UI.Wrapper>\n    );\n  }\n);\n\nexport default Dropdown;\n","import styled from 'styled-components';\nimport COLORS from '../../../../constants/colors';\nimport { StatusTypes } from '../../../../constants/statusTypes';\nimport { StatusType } from '../../../../types/StatusType';\n\ninterface IRequestItemStyleProps {\n  status?: StatusType;\n}\n\nexport const ItemWrapper = styled.div`\n  transition: 0.15s;\n  position: relative;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px 10px;\n  background-color: ${COLORS.WHITE_BRIGHT};\n  border-radius: 5px;\n  box-shadow: 0px 1px 2px ${COLORS.GRAY_SUPER_LIGHT};\n  margin-right: 10px;\n\n  svg g circle {\n    transition: 0.15s;\n    fill: ${COLORS.GRAY_LIGHT};\n  }\n\n  &:hover {\n    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.25);\n\n    svg g circle {\n      fill: ${COLORS.GRAY_BRIGHT};\n    }\n  }\n`;\n\nexport const Indicator = styled.div<IRequestItemStyleProps>`\n  width: 10px;\n  height: 10px;\n  border: 1px solid ${COLORS.GRAY_LIGHT};\n  background-color: ${({ status }) => (status === StatusTypes.SUCCESS ? COLORS.GREEN : COLORS.RED_BRIGHT)};\n  border-radius: 50%;\n  margin-right: 5px;\n`;\n\nexport const ActionName = styled.p`\n  color: ${COLORS.BLACK};\n  font-size: 16px;\n  margin-right: 10px;\n`;\n","import styled from 'styled-components';\nimport COLORS from '../../../../../constants/colors';\n\nexport const CopiedWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const CopiedLabel = styled.div`\n  position: absolute;\n  padding: 0 5px;\n  background-color: ${COLORS.WHITE_LIGHT};\n  border-radius: 5px;\n  animation-name: copy;\n  animation-duration: 1s;\n  animation-delay: 0.25s;\n\n  @keyframes copy {\n    from {\n      opacity: 1;\n      transform: translate(0);\n    }\n    to {\n      opacity: 0.2;\n      transform: translateY(-20px);\n    }\n  }\n`;\n\nexport const CopiedText = styled.p`\n  font-size: 12px;\n  color: ${COLORS.BLACK};\n`;\n","import React from 'react';\nimport VARS from '../../../../../constants/vars';\nimport * as UI from './styles';\n\nconst Copied: React.FC = () => {\n  return (\n    <UI.CopiedWrapper>\n      <UI.CopiedLabel>\n        <UI.CopiedText>{VARS.COPIED}</UI.CopiedText>\n      </UI.CopiedLabel>\n    </UI.CopiedWrapper>\n  );\n};\n\nexport default Copied;\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { StatusType } from '../../../../types/StatusType';\nimport Dropdown from '../../../../UI/Dropdown';\nimport { DotsIcon } from '../../../CommonComponents/Icons/DotsIcon';\nimport { Action, ActionFunctionAny } from 'redux-actions';\nimport * as UI from './styles';\nimport { IRequest } from '../../../../models/IRequest';\nimport VARS from '../../../../constants/vars';\nimport Copied from './Copied';\n\ninterface IRequestItemProps {\n  query: string;\n  setRequest: ActionFunctionAny<Action<any>>;\n  setResponse: ActionFunctionAny<Action<any>>;\n  removeRequest: ActionFunctionAny<Action<any>>;\n  id?: number;\n  status?: StatusType;\n}\n\nconst RequestItem: React.FC<IRequestItemProps> = ({\n  query,\n  id,\n  status,\n  setRequest,\n  setResponse,\n  removeRequest,\n}) => {\n  const [showDropdown, setShowDropdown] = useState<boolean>(false);\n  const [showCopied, setShowCopied] = useState<boolean>(false);\n\n  const itemRef = useRef<any>(null);\n  const dropdownRef = useRef<any>(null);\n\n  useEffect(() => {\n    document.addEventListener('mousedown', clickOutsideHandler);\n\n    return () => {\n      document.removeEventListener('mousedown', clickOutsideHandler);\n    };\n  }, [dropdownRef]);\n\n  const request = useMemo((): IRequest => {\n    const newRequest: IRequest = {\n      query,\n      id,\n    };\n    return newRequest;\n  }, [query, id]);\n\n  const clickOutsideHandler = useCallback(\n    (e: any) => {\n      if (!dropdownRef.current?.contains(e.target) && !itemRef.current?.contains(e.target)) {\n        setShowDropdown(false);\n      }\n    },\n    [dropdownRef, itemRef, setShowDropdown]\n  );\n\n  const dropdownStateHandler = useCallback(() => {\n    setShowDropdown((prev) => !prev);\n  }, [setShowDropdown]);\n\n  return (\n    <UI.ItemWrapper onClick={dropdownStateHandler} ref={itemRef}>\n      <UI.Indicator status={status} />\n      <UI.ActionName>{JSON.parse(query).action || VARS.EMPTY}</UI.ActionName>\n      <DotsIcon />\n      {showCopied && <Copied />}\n      {showDropdown && (\n        <Dropdown\n          ref={dropdownRef}\n          request={request}\n          setRequest={setRequest}\n          setResponse={setResponse}\n          removeRequest={removeRequest}\n          setShowCopied={setShowCopied}\n        />\n      )}\n    </UI.ItemWrapper>\n  );\n};\n\nexport default RequestItem;\n","import styled from 'styled-components';\nimport COLORS from '../../../constants/colors';\n\nexport const Wrapper = styled.div`\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-top: 1px solid ${COLORS.GRAY_LIGHT};\n  border-bottom: 1px solid ${COLORS.GRAY_LIGHT};\n`;\n\nexport const HistoryWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 0 15px;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  margin-bottom: -160px;\n  padding-bottom: 160px;\n  margin-top: -25px;\n  padding-top: 25px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const ClearHistory = styled.div`\n  position: relative;\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 15px;\n  border-left: 1px solid ${COLORS.GRAY_LIGHT};\n  box-shadow: -15px 0 15px ${COLORS.WHITE_LIGHT};\n`;\n\nexport const ClearIcon = styled.img``;\n","import React, { useCallback } from 'react';\nimport { Action, ActionFunctionAny } from 'redux-actions';\n\nimport { IRequest } from '../../../models/IRequest';\nimport RequestItem from './RequestItem';\nimport * as UI from './styles';\n\ninterface IRequestHistoryProps {\n  setRequest: ActionFunctionAny<Action<any>>;\n  setResponse: ActionFunctionAny<Action<any>>;\n  removeRequest: ActionFunctionAny<Action<any>>;\n  removeAllRequests: ActionFunctionAny<Action<any>>;\n  allRequests: IRequest[];\n}\n\nconst RequestHistory: React.FC<IRequestHistoryProps> = ({\n  setRequest,\n  setResponse,\n  removeRequest,\n  removeAllRequests,\n  allRequests,\n}) => {\n  const requestItemProps = {\n    setRequest,\n    setResponse,\n    removeRequest,\n  };\n\n  const clearHistoryHandler = useCallback(() => {\n    return removeAllRequests();\n  }, []);\n\n  return (\n    <UI.Wrapper>\n      <UI.HistoryWrapper>\n        {allRequests.map((request, id) => (\n          <RequestItem {...request} {...requestItemProps} key={id} />\n        ))}\n      </UI.HistoryWrapper>\n      <UI.ClearHistory onClick={clearHistoryHandler}>\n        <UI.ClearIcon src=\"/icons/cross.svg\" />\n      </UI.ClearHistory>\n    </UI.Wrapper>\n  );\n};\n\nexport default RequestHistory;\n","import styled from 'styled-components';\nimport COLORS from '../../constants/colors';\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n  background-color: ${COLORS.WHITE_MEDIUM};\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport Consoles from '../../components/ConsoleComponents/Consoles';\nimport Footer from '../../components/ConsoleComponents/Footer';\nimport Header from '../../components/ConsoleComponents/Header';\nimport RequestHistory from '../../components/ConsoleComponents/RequestHistory';\nimport { useActions } from '../../hooks/useActions';\nimport {\n  authIsLoggedInSelector,\n  authLoginInSelector,\n  authSubloginInSelector,\n  requestAllSelector,\n  requestLoadingSelector,\n  requestSelector,\n} from '../../store/selectors';\nimport * as UI from './styles';\n\nconst ConsolePage: React.FC<RouteComponentProps> = ({ history }) => {\n  const {\n    logout,\n    setRequest,\n    setResponse,\n    jsonInvalid,\n    clearRequest,\n    removeRequest,\n    removeAllRequests,\n  } = useActions();\n\n  const login = useSelector(authLoginInSelector);\n  const sublogin = useSelector(authSubloginInSelector);\n  const isLoggedIn = useSelector(authIsLoggedInSelector);\n  const request = useSelector(requestSelector);\n  const allRequests = useSelector(requestAllSelector);\n  const isLoading = useSelector(requestLoadingSelector);\n\n  useEffect(() => {\n    clearRequest();\n  }, []);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      history.push('/');\n    }\n  }, [isLoggedIn]);\n\n  const headerProps = {\n    login,\n    sublogin,\n    logout,\n  };\n\n  const requestHistoryProps = {\n    setRequest,\n    setResponse,\n    removeRequest,\n    removeAllRequests,\n    allRequests,\n  };\n\n  const consolesProps = {\n    request,\n    setRequest,\n  };\n\n  const footerProps = {\n    isLoading,\n    request,\n    setRequest,\n    setResponse,\n    jsonInvalid,\n  };\n\n  return (\n    <UI.Wrapper>\n      <Header {...headerProps} />\n      <RequestHistory {...requestHistoryProps} />\n      <Consoles {...consolesProps} />\n      <Footer {...footerProps} />\n    </UI.Wrapper>\n  );\n};\n\nexport default withRouter(ConsolePage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport createStore from './store';\nimport LoginPage from './pages/LoginPage';\nimport ConsolePage from './pages/ConsolePage';\n\nconst { store, persistor } = createStore();\n\nconst App = () => {\n  return (\n    <Router>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Switch>\n            <Route path=\"/console\">\n              <ConsolePage />\n            </Route>\n            <Route path=\"/\">\n              <LoginPage />\n            </Route>\n          </Switch>\n        </PersistGate>\n      </Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}